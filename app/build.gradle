plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'

    //https://kotlinlang.org/docs/all-open-plugin.html#maven
    id 'kotlin-allopen'
}

allOpen {
    //this will make classes with AnnotationToMakeClassOpen annotation open
    //https://kotlinlang.org/docs/all-open-plugin.html#maven
    annotation("com.example.hilttesting.AnnotationToMakeClassOpenForTesting")
}

android {
    compileSdk 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.hilttesting"
        minSdk 24
        targetSdk 30
        versionCode 1
        versionName "1.0"

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.example.hilttesting.CustomTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.4.32'
    }
    testOptions.unitTests.all {
        useJUnitPlatform()
        testLogging {
            events 'passed', 'failed', 'skipped', 'standardOut', 'standardError'
        }
    }
    packagingOptions {
            exclude 'META-INF/AL2.0'
            exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.0-alpha07'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


    //todo - check if there is junit5 option in compose testing
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"


    //BEGIN HILT
    implementation 'com.google.dagger:hilt-android:2.35'
    kapt 'com.google.dagger:hilt-compiler:2.35'

    // For instrumentation tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.35'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.35'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.35'
    kaptTest 'com.google.dagger:hilt-compiler:2.35'

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"

    //END HILT


    //not used
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'





    //not related to our hilt testing but it is good to use junit 5 instead of junit 4

    //junit4
    //testImplementation 'junit:junit:4.13.2'

    //junit5
    //used in non instrumentation tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
}